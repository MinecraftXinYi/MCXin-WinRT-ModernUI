namespace MinecraftXinYi.Windows.ModernUI.Core
{
	[version(1.0)]
	[uuid(954460a2-2cf6-4a32-a6c2-26a34c888804)]
	interface ITextInputProducer : IInspectable
	{
		[propget] HRESULT IsInputEnabled([out][retval] boolean* value);
		[propput] HRESULT IsInputEnabled([in] boolean value);
		[propget] HRESULT HasFocus([out][retval] boolean* value);
		[propput] HRESULT HasFocus([in] boolean value);
		[propget] HRESULT MessageHandled([out][retval] boolean* value);
		[propget] HRESULT CurrentKeyEventType([out][retval] /*Windows.UI.Core.KeyEventType*/ int* value);
		HRESULT GetAsyncKeyState([in] Windows.System.VirtualKey key,[out][retval] Windows.UI.Core.CoreVirtualKeyStates* value);
		HRESULT GetKeyState([in] Windows.System.VirtualKey key,[out][retval] Windows.UI.Core.CoreVirtualKeyStates* value);
		HRESULT GetCurrentKeyEventDeviceId([out][retval] HSTRING* value);
	};

	[version(1.0)]
	[uuid(a9d00ab3-2fef-41a0-b0ad-4b2129ea2663)]
	interface ITextInputConsumer : IInspectable
	{
		[propget] HRESULT TextInputProducer([out][retval] ITextInputProducer** value);
		[propput] HRESULT TextInputProducer([in] ITextInputProducer* value);
		HRESULT InvokeAcceleratorKeyEventHandlers();
		HRESULT InvokeKeyDownEventHandlers();
		HRESULT InvokeKeyUpEventHandlers();
		HRESULT InvokeCharacterReceivedEventHandlers();
		HRESULT InvokeSystemKeyDownEventHandlers();
		HRESULT InvokeSystemKeyUpEventHandlers();
		HRESULT InvokeNavigationFocusEventHandlers();
		HRESULT OnTextInputProducerFocusChanged();
		HRESULT OnEnableNonCUIDepartFocus();
	};
}
